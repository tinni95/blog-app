{"version":3,"sources":["apollo/resolvers.ts","apollo/client.ts","apollo/mutations.ts","apollo/query.ts","constants/Colors.ts","components/ArrowButton.tsx","components/StyledTextInput.tsx","screens/CreatePost.tsx","apollo/subscriptions.ts","components/AddButton.tsx","components/StyledText.tsx","components/PostCard.tsx","screens/HomeScreen.tsx","components/LikeButton.tsx","editContext.ts","components/CommentCard.tsx","constants/Layout.ts","components/CommentTextInput.tsx","screens/PostScreen.tsx","screens/EditPost.tsx","context.ts","navigation/index.tsx","screens/LoginScreen.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/Quicksand-Bold.ttf","assets/fonts/Quicksand-Light.ttf","assets/fonts/Quicksand-Medium.ttf","assets/fonts/Quicksand-Regular.ttf","node_modules/moment/locale sync /^/.//.*$"],"names":["typeDefs","gql","uri","process","HEROKU","Platform","OS","replace","expoUrl","Constants","manifest","bundleUrl","hostnameStartIndex","indexOf","substring","getLocalHostName","wsLink","WebSocketLink","options","reconnect","httpLink","createHttpLink","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","_","a","async","headers","AsyncStorage","getItem","token","authorization","cache","InMemoryCache","client","ApolloClient","link","concat","resolvers","LOGIN_MUTATION","CREATE_POST","EDIT_POST","DELETE_POST","CREATE_COMMENT","EDIT_COMMENT","LIKE","UNLIKE","LOCALUSER","CURRENTUSER","POSTS_QUERY","GET_POST","ArrowButton","props","TouchableOpacity","style","backgroundColor","Colors","alignItems","justifyContent","paddingLeft","paddingRight","padding","borderRadius","width","AntDesign","name","size","color","StyledTextInput","TextInput","fontFamily","fontSize","paddingTop","paddingBottom","styles","StyleSheet","create","container","display","flex","body","footer","CreatePost","navigation","useMutation","onCompleted","data","goBack","refetchQueries","onError","error","console","log","createPost","useState","title","setTitle","content","setContent","ScrollView","scrollEnabled","contentContainerStyle","View","margin","placeholder","placeholderTextColor","value","onChangeText","v","multiline","minHeight","onPress","variables","alert","top","marginRight","POSTS_SUBSCRIPTION","COMMENTS_SUBSCRIPTION","LIKES_SUBSCRIPTION","position","opacity","bottom","right","AddButton","Bold","Text","Medium","Regular","PostCard","post","author","username","when","moment","createdAt","fromNow","marginTop","likes","length","comments","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","flexDirection","HomeScreen","useQuery","posts","loading","refetch","subscribeToMore","search","setSearch","filteredPosts","setPosts","useEffect","filter","toLowerCase","includes","document","updateQuery","prev","subscriptionData","newFeedItem","postAdded","ActivityIndicator","letterSpacing","t","FlatList","refreshControl","RefreshControl","refreshing","onRefresh","keyExtractor","item","id","renderItem","navigate","small","LikeButton","postId","commentId","like","unLike","find","l","User","alignContent","Entypo","marginLeft","createContext","edit","setEdit","marginBottom","zIndex","smallGrey","row","textInput","borderColor","borderWidth","editText","confirmButton","cancelButton","confirmText","textAlign","CommentCard","comment","flatlist","index","context","useContext","EditContext","editComment","isEdit","editValue","setEditValue","editTextInputRef","useRef","current","focus","scrollToIndex","ref","DeviceWidth","Dimensions","get","CommentTextInput","setComment","offset","setOffset","Keyboard","dismiss","createComment","addListener","_keyboardDidShow","_keyboardDidHide","removeListener","e","endCoordinates","Feather","mainContainer","indicatorBar","indicator","PostScreen","route","params","getPost","flatlistRef","setOptions","headerRight","commentAdded","likeAdded","Provider","showsVerticalScrollIndicator","ListHeaderComponent","EvilIcons","newComments","map","EditPost","onDelete","extraInfo","editPost","deletePost","Alert","text","login","logout","Navigation","useApolloClient","loginContext","React","currentUser","writeQuery","NavigationContainer","theme","DefaultTheme","RootNavigator","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","headerTitleStyle","headerLeft","MaterialIcons","white","semiwhite","header","inputContainer","LoginScreen","setUsername","u","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","Ionicons","font","require","warn","useCachedResources","logged","setLogged","then","setItem","removeItem","StatusBar","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve"],"mappings":"+XAEO,IAAMA,EAAWC,cAAH,K,ilBCarB,IAaIC,EAEFA,EADEC,kaAAYC,OACR,4CAGY,QAAhBC,IAASC,GACL,4BACA,4BAA4BC,QAAQ,YApBnB,WAEvB,IAAMC,EAAUC,IAAUC,SAASC,UAE7BC,EAAqBJ,EAAQK,QAAQ,MAAQ,EAMnD,OALiBL,EAAQM,UACvBF,EACAJ,EAAQK,QAAQ,IAAKD,IAagCG,IAGzD,IAAMC,EAAS,IAAIC,IAAc,CAC/Bf,IAAI,KAAMA,EACVgB,QAAS,CACPC,WAAW,KAITC,EAAWC,yBAAe,CAC9BnB,IAAI,OAAQA,IAGRoB,EAAYC,iBAChB,YAAgB,IAAbC,EAAY,EAAZA,MACKC,EAAaC,YAAkBF,GACrC,MACsB,wBAApBC,EAAWE,MACc,iBAAzBF,EAAWG,YAGfZ,EACAI,GAGIS,EAAWC,aAAW,SAAOC,EAAP,oBAAAC,EAAAC,OAAA,uDAAYC,EAAZ,EAAYA,QAAZ,WAAAF,EAAA,MAENG,IAAaC,QAAQ,UAFf,cAEpBC,EAFoB,yBAInB,CACLH,QAAQ,EAAD,KACFA,GADE,IAELI,cAAeD,EAAK,UAAaA,EAAU,OAPrB,+DAYtBE,EAAQ,IAAIC,gBASHC,EAPA,IAAIC,eAAa,CAC9BC,KAAMd,EAASe,OAAOtB,GACtBiB,QACAvC,WACA6C,UDvEuB,K,6nEENlB,IAAMC,EAAiB7C,cAAH,KAWd8C,GAAc9C,cAAH,KAQX+C,GAAY/C,cAAH,KAQTgD,GAAchD,cAAH,KAQXiD,GAAiBjD,cAAH,KAQdkD,GAAelD,cAAH,KAQZmD,GAAOnD,cAAH,KAQJoD,GAASpD,cAAH,K,8nCC3DZ,IAAMqD,GAAYrD,cAAH,MAQTsD,GAActD,cAAH,MASXuD,GAAcvD,cAAH,MAoBXwD,GAAWxD,cAAH,M,6BCvCN,GACP,UADO,GAEJ,UAFI,GAGJ,UAHI,GAIN,UAJM,GAKN,UALM,GAMD,UANC,GAOJ,UAPI,GAQH,U,UCHL,SAASyD,GAAYC,GAC1B,OACE,gBAACC,GAAA,EAAD,QACMD,EADN,CAEEE,MAAO,CACL,CACEC,gBAAiBC,GACjBC,WAAY,SACZC,eAAgB,SAChBC,YAAa,GACbC,aAAc,GACdC,QAAS,EACTC,aAAc,GACdC,MAAO,KAETX,EAAME,SAGR,gBAACU,GAAA,EAAD,CAAWC,KAAK,aAAaC,KAAM,GAAIC,MAAM,W,aCnB5C,SAASC,GAAgBhB,GAC9B,OACE,gBAACiB,GAAA,EAAD,QACMjB,EADN,CAEEE,MAAO,CACL,CACEC,gBAAiBC,GACjBc,WAAY,kBACZC,SAAU,GACVV,QAAS,IACTM,MAAO,QACPK,WAAY,KACZC,cAAe,KACfX,aAAc,GAEhBV,EAAME,UCVd,IA0DMoB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,QAAS,OACTC,KAAM,EACNxB,gBAAiB,MACjBG,eAAgB,UAElBsB,KAAM,CACJD,KAAM,EACNxB,gBAAiBC,IAEnByB,OAAQ,CACNF,KAAM,GACNxB,gBAAiBC,GACjBE,eAAgB,WAChBD,WAAY,cAIDyB,GA7EmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACrBC,sBAAY5C,GAAa,CACtD6C,YAAa,SAACC,GACZH,EAAWI,UAEbC,eAAgB,CAAC,CAAEvE,MAAOgC,KAC1BwC,QAAS,SAACC,GACRC,QAAQC,IAAIF,MAPoC,WAC7CG,EAD6C,aAC/BP,KASKQ,mBAAS,KAViB,WAU7CC,EAV6C,KAUtCC,EAVsC,OAWtBF,mBAAS,IAXa,WAW7CG,EAX6C,KAWpCC,EAXoC,KAkBpD,OACE,kBAACC,EAAA,EAAD,CAAYC,eAAe,EAAOC,sBAAuB3B,GAAOG,WAC9D,kBAACyB,EAAA,EAAD,CAAMhD,MAAOoB,GAAOM,MAClB,kBAACZ,GAAD,CACEd,MAAO,CACLC,gBAAiBC,GACjB+C,OAAQ,GACRpC,MAAOX,GACPc,WAAY,kBAEdkC,YAAa,aACbC,qBAAsBjD,GACtBkD,MAAOX,EACPY,aAAc,SAACC,GAAD,OAAOZ,EAASY,MAEhC,kBAACxC,GAAD,CACEyC,WAAS,EACTvD,MAAO,CACLC,gBAAiBC,GACjB+C,OAAQ,GACRO,UAAW,IACX3C,MAAOX,GACPc,WAAY,kBAEdkC,YAAa,YACbC,qBAAsBjD,GACtBkD,MAAOT,EACPU,aAAc,SAACC,GAAD,OAAOV,EAAWU,OAGpC,kBAACN,EAAA,EAAD,CAAMhD,MAAOoB,GAAOO,QAClB,kBAAC9B,GAAD,CACE4D,QAAS,WApCVhB,GAAUE,EACVJ,EAAW,CAAEmB,UAAW,CAAEf,UAASF,WADhBkB,MAAM,yBAqCxB3D,MAAO,CAAE4D,KAAM,GAAIC,YAAa,S,6/BC1DnC,IAAMC,GAAqB1H,cAAH,MAuBlB2H,GAAwB3H,cAAH,MAoBrB4H,GAAqB5H,cAAH,MCxBzBgF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT0C,SAAU,WACVC,QAAS,GACTC,OAAQ,GACRC,MAAO,MAIIC,GAjB6B,SAACvE,GAC3C,OACE,kBAACC,GAAA,EAAD,CAAkBC,MAAOoB,GAAOG,UAAWkC,QAAS3D,EAAM2D,SACxD,kBAAC/C,GAAA,EAAD,CAAWC,KAAK,aAAaC,KAAM,GAAIC,MAAOX,O,4BCT7C,SAASoE,GAAKxE,GACnB,OACE,gBAACyE,GAAA,EAAD,QACMzE,EADN,CAEEE,MAAO,CACL,CAAEgB,WAAY,iBAAkBC,SAAU,GAAIJ,MAAOX,IACrDJ,EAAME,UAMP,SAASwE,GAAO1E,GACrB,OACE,gBAACyE,GAAA,EAAD,QACMzE,EADN,CAEEE,MAAO,CACL,CAAEgB,WAAY,mBAAoBC,SAAU,GAAIJ,MAAOX,IACvDJ,EAAME,UAMP,SAASyE,GAAQ3E,GACtB,OACE,gBAACyE,GAAA,EAAD,QACMzE,EADN,CAEEE,MAAO,CACL,CAAEgB,WAAY,oBAAqBC,SAAU,GAAIJ,MAAOX,IACxDJ,EAAME,UCxBP,SAAS0E,GAAS5E,GAAuB,IACtC6E,EAAkB7E,EAAlB6E,KAAMlB,EAAY3D,EAAZ2D,QACd,OACE,gBAAC1D,GAAA,EAAD,CAAkBC,MAAOoB,GAAOG,UAAWkC,QAASA,GAClD,gBAACc,GAAA,EAAD,KACE,gBAACC,GAAD,CAAQxE,MAAOoB,GAAOT,MAAOgE,EAAKC,OAAOC,SAAzC,KACA,gBAACL,GAAD,CAAQxE,MAAOoB,GAAO0D,MAAOC,KAAOJ,EAAKK,WAAWC,YAEtD,gBAACX,GAAD,CAAMtE,MAAO,CAAEiB,SAAU,GAAIJ,MAAOX,GAAagF,UAAW,KACzDP,EAAKlC,OAER,gBAACgC,GAAD,CAASzE,MAAO,CAAEiB,SAAU,GAAIE,cAAe,KAC5CwD,EAAKhC,QAAQ1F,UAAU,EAAG,KAE7B,gBAAC+F,EAAA,EAAD,CAAMhD,MAAOoB,GAAOO,QAClB,gBAAC6C,GAAD,KAASG,EAAKQ,MAAMC,OAApB,UACA,gBAACZ,GAAD,KAASG,EAAKU,SAASD,OAAvB,eAMR,IAAMhE,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTtB,gBAAiBC,GACjBgF,UAAW,GACX3E,QAAS,GACT+E,YAAa,OACbC,aAAc,CACZ9E,MAAO,EACP+E,OAAQ,GAEVC,cAAe,IACfC,aAAc,KAEdC,UAAW,GAEbhF,KAAM,CACJE,MAAOX,IAET4E,KAAM,CACJjE,MAAOX,IAETyB,OAAQ,CACNiE,cAAe,MAEfxF,eAAgB,mBC8BdgB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTE,KAAM,EACNxB,gBAAiBC,GACjBK,QAAS,GACTW,WAAY,MAID2E,GA3E+B,SAAC,GAAoB,IAAlBhE,EAAiB,EAAjBA,WAAiB,EAM5DiE,mBAASnG,IANmD,IAE9DqC,KAF8D,gBAEvC,GAFuC,GAEtD+D,aAFsD,MAE9C,GAF8C,EAG9DC,EAH8D,EAG9DA,QACAC,EAJ8D,EAI9DA,QACAC,EAL8D,EAK9DA,gBAL8D,EAOpC1D,mBAAS,IAP2B,WAOzD2D,EAPyD,KAOjDC,EAPiD,OAQ9B5D,mBAAS,IARqB,WAQzD6D,EARyD,KAQ1CC,EAR0C,KAmChE,OAzBAC,qBAAU,WACRD,EACEP,EAAMS,QAAO,SAAC7B,GACZ,OACEA,EAAKhC,QAAQ8D,cAAcC,SAASP,EAAOM,gBAC3C9B,EAAKlC,MAAMgE,cAAcC,SAASP,EAAOM,qBAI9C,CAACN,EAAQJ,IAEZQ,qBAAU,YACPP,GACCE,EAAgB,CACdS,SAAU7C,GACV8C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiB9E,KAAM,OAAO6E,EACnC,IAAME,EAAcD,EAAiB9E,KAAKgF,UAC1C,OAAO,KAAc,GAAIH,EAAM,CAC7Bd,MAAM,CAAEgB,GAAH,YAAmBF,EAAKd,eAIpC,IAECC,EACK,kBAACiB,GAAA,EAAD,MAGP,kBAACjE,EAAA,EAAD,CAAMhD,MAAOoB,GAAOG,WAClB,kBAAC+C,GAAD,CAAMtE,MAAO,CAAEkH,cAAe,IAA9B,SACA,kBAACpG,GAAD,CACEsC,MAAO+C,EACP9C,aAAc,SAAC8D,GAAD,OAAOf,EAAUe,IAC/BnH,MAAO,CAAEkF,UAAW,IACpB/B,qBAAsBjD,GACtBgD,YAAa,eAEf,kBAACkE,GAAA,EAAD,CACEpF,KAAMqE,EACNgB,eACE,kBAACC,GAAA,EAAD,CAAgBC,WAAYvB,EAASwB,UAAW,kBAAMvB,OAExDwB,aAAc,SAACC,GAAD,OAAgBA,EAAKC,IACnCC,WAAY,gBAAGF,EAAH,EAAGA,KAAH,OACV,kBAAChD,GAAD,CACEjB,QAAS,kBAAM5B,EAAWgG,SAAS,OAAQ,CAAEF,GAAID,EAAKC,MACtDhD,KAAM+C,OAIZ,kBAAC,GAAD,CAAWjE,QAAS,kBAAM5B,EAAWgG,SAAS,mB,oBCS9CzG,GAASC,IAAWC,OAAO,CAC/BwG,MAAO,CAAE7G,SAAU,MAGN8G,GA1E+B,SAAC,GAKxC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACA9C,EAEI,EAFJA,MACAnF,EACI,EADJA,MACI,EACsB8F,mBAASrG,IAA3BuC,EADJ,EACIA,KAAMgE,EADV,EACUA,QADV,EAGWlE,sBAAYvC,GAAM,CAC/BwC,YAAa,SAACC,GAAD,OAAUK,QAAQC,IAAIN,IACnCE,eAAgB,CACd,CAAEvE,MAAOiC,GAAU8D,UAAW,CAAEiE,GAAIK,IACpC,CAAErK,MAAOgC,OAJNuI,EAHH,cAUapG,sBAAYtC,GAAQ,CACnCuC,YAAa,SAACC,GAAD,OAAUK,QAAQC,IAAIN,IACnCE,eAAgB,CACd,CAAEvE,MAAOiC,GAAU8D,UAAW,CAAEiE,GAAIK,IACpC,CAAErK,MAAOgC,OAJNwI,EAVH,YAkBJ,OAAInC,EAAgB,kBAACiB,GAAA,EAAD,MAEhB9B,EAAMiD,MAAK,SAACC,GAAD,OAAaA,EAAEzD,OAAO+C,IAAM3F,EAAKsG,KAAKX,MAEjD,kBAAC5H,GAAA,EAAD,CACE0D,QAAS,kBACP0E,EAAO,CACLzE,UAAW,CAAEsE,OAAQC,EAAY,KAAOD,EAAQC,gBAGpDjI,MAAO,CACL4F,cAAe,MACf2C,aAAc,SACdpI,WAAY,WAGd,kBAACqI,GAAA,EAAD,CAAQ7H,KAAK,QAAQC,KAAM,GAAIC,MAAOX,KACtC,kBAACoE,GAAD,CACEtE,MAAO,CAACoB,GAAO0G,MAAO,CAAEjH,MAAOX,GAAcuI,WAAY,GAAKzI,IAE7DmF,EAAMC,OAHT,WASF,kBAACrF,GAAA,EAAD,CACE0D,QAAS,kBACPyE,EAAK,CAAExE,UAAW,CAAEsE,OAAQC,EAAY,KAAOD,EAAQC,gBAEzDjI,MAAO,CACL4F,cAAe,MACf2C,aAAc,SACdpI,WAAY,WAGd,kBAACqI,GAAA,EAAD,CAAQ7H,KAAK,iBAAiBC,KAAM,GAAIC,MAAOX,KAC/C,kBAACoE,GAAD,CACEtE,MAAO,CAACoB,GAAO0G,MAAO,CAAEjH,MAAOX,GAAcuI,WAAY,GAAKzI,IAE7DmF,EAAMC,OAHT,YCjFOsD,2BAAc,CAC3BC,MAAM,EACNC,QAAS,SAACtF,OCwINlC,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTtB,gBAAiBC,GACjBgF,UAAW,EACX2D,aAAc,EACdtI,QAAS,GACTiD,UAAW,GACXsF,OAAQ,KAEVhB,MAAO,CACL7G,SAAU,IAEZ8H,UAAW,CACT9H,SAAU,GACVJ,MAAOX,IAET8I,IAAK,CACHpD,cAAe,MACfxF,eAAgB,gBAChByI,aAAc,IAEhBI,UAAW,CACTC,YAAahJ,GACbiJ,YAAa,EACb5I,QAAS,EACTY,cAAe,GACfD,WAAY,GACZV,aAAc,GAEhB4I,SAAU,CACRX,WAAY,EACZ5H,MAAOX,GACPe,SAAU,IAEZoI,cAAe,CACbpJ,gBAAiBC,GACjBK,QAAS,EACTE,MAAO,IACPD,aAAc,EACdJ,eAAgB,UAElBkJ,aAAc,CACZrJ,gBAAiBC,GACjBK,QAAS,EACTE,MAAO,IACPD,aAAc,EACdJ,eAAgB,SAChBqI,WAAY,IAEdc,YAAa,CACXtI,SAAU,GACVJ,MAAOX,GACPsJ,UAAW,YAIAC,GAxKiC,SAAC3J,GAAW,IAClD4J,EAAkD5J,EAAlD4J,QAASC,EAAyC7J,EAAzC6J,SAAUhC,EAA+B7H,EAA/B6H,GAAIiC,EAA2B9J,EAA3B8J,MAAO1D,EAAoBpG,EAApBoG,gBAEtCK,qBAAU,WACRL,MACC,IALsD,MAOpBJ,mBAASrG,IAAtCuC,KAPiD,gBAO3B,GAP2B,GAOzCsG,YAPyC,MAOlC,GAPkC,EAQnDuB,EAAUC,qBAAWC,IAR8B,EAShBjI,sBAAYxC,GAAc,CACjE4C,eAAgB,CAAC,CAAEvE,MAAOiC,GAAU8D,UAAW,CAAEiE,UAVM,WASlDqC,EATkD,YAS7BhE,GAT6B,EASnChE,KATmC,EAS7BgE,SAItBiE,EAASJ,EAAQlB,KAAO,IAAMe,EAAQ/B,GAAK,GAbQ,EAcvBnF,mBAAS,IAdc,WAclD0H,EAdkD,KAcvCC,EAduC,KAgBnDC,EAAmBC,iBAAO,MAEhC9D,qBAAU,WACRlE,QAAQC,IAAI,QAASqH,EAASW,WAC7B,CAACX,IAEJpD,qBAAU,WACJ0D,IACFG,EAAiBE,QAAQC,QACzBlI,QAAQC,IAAIqH,EAASW,QAAQE,cAAc,CAAEZ,cAE9C,CAACC,EAAQlB,OAcZ,OAAI3C,EAAgB,kBAACiB,GAAA,EAAD,MAElB,kBAACjE,EAAA,EAAD,CAAMhD,MAAOoB,GAAOG,WAClB,kBAACyB,EAAA,EAAD,CAAMhD,MAAOoB,GAAO4H,KAClB,kBAACzE,GAAA,EAAD,KACE,kBAACD,GAAD,CAAMtE,MAAOoB,GAAO0G,OAAQ4B,EAAQ9E,OAAOC,SAA3C,KACA,kBAACP,GAAD,CAAMtE,MAAOoB,GAAO2H,WACjBhE,KAAO2E,EAAQ1E,WAAWC,YAG9ByE,EAAQ9E,OAAO+C,KAAOW,EAAKX,KAAOsC,GACjC,kBAAClK,GAAA,EAAD,CACEC,MAAO,CACL4F,cAAe,OAEjBnC,QAAS,kBA1BjB0G,EAAaT,EAAQ/G,cACrBkH,EAAQjB,QAAQc,EAAQ/B,MA2BhB,kBAACjH,GAAA,EAAD,CAAWC,KAAK,OAAOC,KAAM,GAAIC,MAAOX,KACxC,kBAACoE,GAAD,CAAMtE,MAAOoB,GAAOgI,UAApB,UAIJa,EAYA,oCACE,kBAAClJ,GAAA,EAAD,CACEf,MAAOoB,GAAO6H,UACd7F,MAAO8G,EACP7G,aAAc,SAAC8D,GAAD,OAAOgD,EAAahD,IAClCsD,IAAKL,IAEP,kBAACpH,EAAA,EAAD,CAAMhD,MAAO,CAAE4F,cAAe,MAAOV,UAAW,KAC9C,kBAACnF,GAAA,EAAD,CACE0D,QAlDU,WACpBuG,EAAY,CACVtG,UAAW,CAAEiE,GAAI+B,EAAQ/B,GAAIhF,QAASuH,KAExCL,EAAQjB,QAAQ,OA+CN5I,MAAOoB,GAAOiI,eAEd,kBAAC/E,GAAD,CAAMtE,MAAOoB,GAAOmI,aAApB,aAEF,kBAACxJ,GAAA,EAAD,CACE0D,QAAS,WACPoG,EAAQjB,QAAQ,OAElB5I,MAAOoB,GAAOkI,cAEd,kBAAChF,GAAD,CACEtE,MAAO,CACLa,MAAOX,GACPe,SAAU,GACVuI,UAAW,WAJf,cA/BN,oCACE,kBAAC/E,GAAD,KAAUiF,EAAQ/G,SAClB,kBAACK,EAAA,EAAD,CAAMhD,MAAO,CAAEwF,OAAQ,MACvB,kBAAC,GAAD,CACEwC,OAAQL,EACRM,UAAWyB,EAAQ/B,GACnBxC,MAAOuE,EAAQvE,MACfnF,MAAO,CAAEa,MAAOX,S,4BCjGfwK,GAAcC,KAAWC,IAAI,UAAUnK,MCoG9CW,IDnGSuJ,KAAWC,IAAI,UAAUpF,OCmGzBnE,IAAWC,OAAO,CAC/BC,UAAW,CACTE,KAAM,EACNhB,MAAOiK,GACPzK,gBAAiBC,GACjB+D,SAAU,WACVE,OAAQ,EACRhD,cAAe,GACf2H,OAAQ,QAIG+B,GAjGU,SAAC,GAA4B,IAA1BlD,EAAyB,EAAzBA,GAAyB,EACrBnF,mBAAS,IADY,WAC5CkH,EAD4C,KACnCoB,EADmC,OAEvBtI,mBAAS,GAFc,WAE5CuI,EAF4C,KAEpCC,EAFoC,OAGjBlJ,sBAAYzC,GAAgB,CAC5D6C,eAAgB,CACd,CAAEvE,MAAOiC,GAAU8D,UAAW,CAAEiE,OAChC,CAAEhK,MAAOgC,KAEXoC,YAAa,WACX+I,EAAW,IACXG,KAASC,UACTF,EAAU,IAEZ7I,QAAS,SAACC,GACRC,QAAQC,IAAIF,MAdmC,WAG5C+I,EAH4C,UAG3BnJ,KAexBuE,qBAAU,WACR,GAAoB,QAAhB/J,IAASC,GAIX,OAHAwO,KAASG,YAAY,kBAAmBC,GACxCJ,KAASG,YAAY,kBAAmBE,GAEjC,WACLL,KAASM,eAAe,kBAAmBF,GAC3CJ,KAASM,eAAe,kBAAmBD,MAG9C,IAEH,IAAMD,EAAmB,SAACG,GACxBR,EAAUQ,EAAEC,eAAejG,SAGvB8F,EAAmB,WACvBN,EAAU,IAGZ,OACE,kBAAChI,EAAA,EAAD,CAAMhD,MAAO,CAACoB,GAAOG,UAAW,CAAE4C,OAAQ4G,KACxC,kBAAC/H,EAAA,EAAD,CACEhD,MAAO,CACLC,gBAAiBC,GACjBuB,KAAM,EACNwB,OAAQ,GACR4F,aAAc,GACdrI,aAAc,EACdoF,cAAe,MACfxF,eAAgB,kBAGlB,kBAACW,GAAA,EAAD,CACEf,MAAO,CACLyB,KAAM,EACNZ,MAAOX,GACPc,WAAY,kBACZC,SAAU,GACVV,QAAS,GACTW,WAAY,KACZC,cAAe,MAEjB+B,YAAa,kBACbC,qBAAsBjD,GACtBkD,MAAOsG,EACPrG,aAAc,SAACC,GAAD,OAAOwH,EAAWxH,MAElC,kBAACvD,GAAA,EAAD,CACEC,MAAO,CACLyB,KAAM,EACNlB,QAAS,GACTgI,aAAc,SACdpI,WAAY,UAEdsD,QAAS,kBACPiG,EAAQtE,QACR+F,EAAc,CAAEzH,UAAW,CAAEf,QAAS+G,EAAS1B,OAAQL,OAGzD,kBAAC+D,GAAA,EAAD,CAAS/K,KAAK,OAAOC,KAAM,GAAIC,MAAM,c,qkBCnE/C,IA+KMO,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CAAEE,KAAM,EAAGxB,gBAAiBC,IACvCyL,cAAe,CAAEpL,QAAS,GAAIN,gBAAiBC,IAC/C4H,MAAO,CAAE7G,SAAU,IACnBS,KAAM,CAAET,SAAU,GAAIiE,UAAW,GAAI2D,aAAc,IACnD+C,aAAc,CACZ3L,gBAAiBC,GACjBsF,OAAQ,GACRI,cAAe,MACfxF,eAAgB,iBAElByL,UAAW,CACTpK,KAAM,EACNrB,eAAgB,SAChBD,WAAY,SACZoI,aAAc,SACd3C,cAAe,SAGJkG,GAlMmB,SAAChM,GAAW,IACpC6H,EAAO7H,EAAMiM,MAAMC,OAAnBrE,GADmC,EAGnBnF,oBAAS,GAHU,WAGpCmG,EAHoC,KAG9BC,EAH8B,OASvC9C,mBAASlG,GAAU,CACrB8D,UAAW,CAAEiE,QAV4B,IAKzC3F,KALyC,gBAKL,GALK,GAKjCiK,eALiC,MAKvB,GALuB,MAKnB3D,YALmB,MAKZ,GALY,EAMzCrC,EANyC,EAMzCA,QACAD,EAPyC,EAOzCA,QACAE,EARyC,EAQzCA,gBAIEgG,EAAc7B,iBAAO,MAEzB9D,qBAAU,WAKR,OAJoBzG,EAAM+B,WAAWuJ,YAAY,SAAS,WACxDnF,EAAQ0B,QAIT,CAAC7H,EAAM+B,aAEV0E,qBAAU,WACJP,GACAiG,EAAQrH,OAAO+C,IAAMW,EAAKX,IAC5B7H,EAAM+B,WAAWsK,WAAW,CAC1BC,YAAa,kBACX,kBAACrM,GAAA,EAAD,CACE0D,QAAS,kBACP3D,EAAM+B,WAAWgG,SAAS,WAAY,CACpCF,KACAhF,QAASsJ,EAAQtJ,QACjBF,MAAOwJ,EAAQxJ,UAInB,kBAACiJ,GAAA,EAAD,CACE1L,MAAO,CAAEO,QAAS,GAClBI,KAAK,OACLC,KAAM,GACNC,MAAOX,WAKhB,CAAC+L,IAEJ1F,qBAAU,YACPP,GACCE,EAAgB,CACdS,SAAU5C,GACVL,UAAW,CAAEsE,OAAQL,GACrBf,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiB9E,KAAM,OAAO6E,EACnC,IAAME,EAAcD,EAAiB9E,KAAKqK,aAO1C,OANe,KAAc,GAAIxF,EAAM,CACrCoF,QAAQ,SACHpF,EAAKoF,SADH,IAEL5G,SAAS,CAAE0B,GAAH,YAAmBF,EAAKoF,QAAQ5G,mBAOjDW,GACCE,EAAgB,CACdS,SAAU3C,GACVN,UAAW,CAAEsE,OAAQL,GACrBf,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiB9E,KAAM,OAAO6E,EACnC,IAAME,EAAcD,EAAiB9E,KAAKsK,UAO1C,OANe,KAAc,GAAIzF,EAAM,CACrCoF,QAAQ,SACHpF,EAAKoF,SADH,IAEL9G,MAAM,CAAE4B,GAAH,YAAmBF,EAAKoF,QAAQ9G,iBAM9C,IAyBH,OAAIa,EACK,kBAACiB,GAAA,EAAD,MAGP,kBAAC,GAAYsF,SAAb,CAAsBnJ,MAAO,CAAEuF,OAAMC,QAAS,SAACtF,GAAD,OAAOsF,EAAQtF,MAC3D,kBAACN,EAAA,EAAD,CAAMhD,MAAOoB,GAAOG,YAChBoH,GAAQ,kBAAC,GAAD,CAAkBhB,GAAIA,IAChC,kBAAC3E,EAAA,EAAD,CAAMhD,MAAO,CAAEyB,KAAM,EAAGN,cAAe,KACrC,kBAACiG,GAAA,EAAD,CACEqD,IAAKyB,EACLM,8BAA8B,EAC9BC,oBAhCN,oCACE,kBAACzJ,EAAA,EAAD,CAAMhD,MAAOoB,GAAOuK,eAClB,kBAACrH,GAAD,CAAMtE,MAAO,CAAEiB,SAAU,KAAOgL,EAAQxJ,OACxC,kBAAC6B,GAAD,CAAMtE,MAAOoB,GAAO0G,OAApB,MAA+BmE,EAAQrH,OAAOC,UAC9C,kBAACJ,GAAD,CAASzE,MAAOoB,GAAOM,MAAOuK,EAAQtJ,UAExC,kBAACK,EAAA,EAAD,CAAMhD,MAAOoB,GAAOwK,cAClB,kBAAC5I,EAAA,EAAD,CAAMhD,MAAOoB,GAAOyK,WAClB,kBAAC,GAAD,CAAY1G,MAAO8G,EAAQ9G,MAAO6C,OAAQL,KAE5C,kBAAC3E,EAAA,EAAD,CAAMhD,MAAOoB,GAAOyK,WAClB,kBAACa,GAAA,EAAD,CAAW/L,KAAK,UAAUC,KAAM,GAAIC,MAAOX,KAC3C,kBAACoE,GAAD,CAAMtE,MAAO,CAACoB,GAAO0G,MAAO,CAAEjH,MAAOX,MAClC+L,EAAQ5G,SAASD,OADpB,gBAqBArC,sBAAuB,CACrB9C,gBAAiBC,GACjBiB,cAAewH,EAAO,IAAM,KAE9B3G,KAAMiK,EAAQ5G,SACdoC,aAAc,SAACC,GAAD,OAAmBA,EAAKC,IACtCN,eACE,kBAACC,GAAA,EAAD,CACEC,WAAYvB,EACZwB,UAAW,kBAAMvB,OAGrB2B,WAAY,gBAAGF,EAAH,EAAGA,KAAMkC,EAAT,EAASA,MAAT,OACV,kBAAC,GAAD,CACE1D,gBAAiB,WACfA,EAAgB,CACdS,SAAU3C,GACVN,UAAW,CAAEuE,UAAWP,EAAKC,IAC7Bf,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiB9E,KAAM,OAAO6E,EACnC,IAAME,EAAcD,EAAiB9E,KAAKsK,UACpCK,EAAc9F,EAAKoF,QAAQ5G,SAASuH,KACxC,SAAClD,GACC,OAAIA,EAAQ/B,IAAMZ,EAAY2C,QAAQ/B,GAC7B,SACF+B,GADL,IAEEvE,MAAM,CAAE4B,GAAH,YAAmB2C,EAAQvE,UAG7BuE,KAWX,OARe,KAAc,GAAI7C,EAAM,CACrCoF,QAAQ,SACHpF,EAAKoF,SADH,IAEL5G,SAAS,MACJsH,WAQf/C,MAAOA,EACPF,QAAShC,EACTC,GAAIA,EACJgC,SAAUuC,W,oBC/EpB9K,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,QAAS,OACTC,KAAM,EACNxB,gBAAiB,MACjBG,eAAgB,UAElBsB,KAAM,CACJD,KAAM,EACNxB,gBAAiBC,IAEnByB,OAAQ,CACNF,KAAM,GACNxB,gBAAiBC,GACjBE,eAAgB,WAChBD,WAAY,cAID0M,GApHiB,SAAC,GAA2B,IAAzBhL,EAAwB,EAAxBA,WAAYkK,EAAY,EAAZA,MACrCpE,EAAOoE,EAAMC,OAAbrE,GACRpB,qBAAU,WACR1E,EAAWsK,WAAW,CACpBC,YAAa,kBACX,kBAACrM,GAAA,EAAD,CAAkBC,MAAO,CAAEO,QAAS,GAAKkD,QAAS,kBAAMqJ,MACtD,kBAACpM,GAAA,EAAD,CAAWC,KAAK,SAASC,KAAM,GAAIC,MAAOX,WAI/C,IAVsD,MAYtC4B,sBAAY3C,GAAW,CACxC4C,YAAa,SAACC,GACZH,EAAWI,UAEbC,eAAgB,CACd,CAAEvE,MAAOgC,IACT,CAAEhC,MAAOiC,GAAU8D,UAAW,CAAEiE,QAElCxF,QAAS,SAACC,GACRC,QAAQC,IAAIF,EAAM2K,cATfC,EAZkD,cAyBpClL,sBAAY1C,GAAa,CAC5C2C,YAAa,SAACC,GACZH,EAAWgG,SAAS,SAEtB3F,eAAgB,CAAC,CAAEvE,MAAOgC,KAC1BwC,QAAS,SAACC,GACRC,QAAQC,IAAIF,MANT6K,EAzBkD,cAmC/BzK,mBAASuJ,EAAMC,OAAOvJ,OAnCS,WAmClDA,EAnCkD,KAmC3CC,EAnC2C,OAoC3BF,mBAASuJ,EAAMC,OAAOrJ,SApCK,WAoClDA,EApCkD,KAoCzCC,EApCyC,KAsCnDkK,EAAW,WACfI,KAAMvJ,MAAM,UAAW,4CAA6C,CAClE,CACEwJ,KAAM,KACN1J,QAAS,kBAAMwJ,EAAW,CAAEvJ,UAAW,CAAEiE,UAE3C,CACEwF,KAAM,SAYZ,OACE,kBAACtK,EAAA,EAAD,CAAYC,eAAe,EAAOC,sBAAuB3B,GAAOG,WAC9D,kBAACyB,EAAA,EAAD,CAAMhD,MAAOoB,GAAOM,MAClB,kBAACZ,GAAD,CACEd,MAAO,CACLC,gBAAiBC,GACjB+C,OAAQ,GACRpC,MAAOX,GACPc,WAAY,kBAEdkC,YAAa,aACbC,qBAAsBjD,GACtBkD,MAAOX,EACPY,aAAc,SAACC,GAAD,OAAOZ,EAASY,MAEhC,kBAACxC,GAAD,CACEyC,WAAS,EACTvD,MAAO,CACLC,gBAAiBC,GACjB+C,OAAQ,GACRO,UAAW,IACX3C,MAAOX,GACPc,WAAY,kBAEdkC,YAAa,YACbC,qBAAsBjD,GACtBkD,MAAOT,EACPU,aAAc,SAACC,GAAD,OAAOV,EAAWU,OAGpC,kBAACN,EAAA,EAAD,CAAMhD,MAAOoB,GAAOO,QAClB,kBAAC9B,GAAD,CACE4D,QAAS,WAtCVhB,GAAUE,EACNF,IAAUsJ,EAAMC,OAAOvJ,OAASE,IAAYoJ,EAAMC,OAAOrJ,QAChEd,EAAWI,SACR+K,EAAS,CAAEtJ,UAAW,CAAEf,UAASF,QAAOkF,QAHrBhE,MAAM,yBAuCxB3D,MAAO,CAAE4D,KAAM,GAAIC,YAAa,SCzG3B6E,2BAAc,CAC3B0E,MAAO,SAAC5O,KACR6O,OAAQ,eCcK,SAASC,KACtB,IAAM1O,EAAS2O,4BACTC,EAAeC,aAAiB5D,IAgBtC,OAdA/D,mBAASpG,GAAa,CACpBqC,YAAa,YAAsB,IAAnB2L,EAAkB,EAAlBA,YACd9O,EAAO+O,WAAW,CAChBhQ,MAAO8B,GACPuC,KAAM,CACJsG,KAAMoF,MAIZvL,QAAS,WACPqL,EAAaH,YAKf,gBAACO,EAAA,EAAD,CAAqBC,MAAOC,KAC1B,gBAACC,GAAD,OAKN,IAAMC,GAAQC,cAEd,SAASF,KACP,OACE,gBAACC,GAAME,UAAP,CACEC,iBAAkB,OAClBC,cAAe,CAAEC,aAAa,IAE9B,gBAACL,GAAMM,OAAP,CACE3N,KAAK,OACL4N,UAAW1I,GACXxI,QAAS,CAAEgR,aAAa,KAE1B,gBAACL,GAAMM,OAAP,CACE3N,KAAK,OACL4N,UAAWzC,GACXzO,QAAS,CACPoF,MAAO,GACP+L,iBAAkB,CAChBxN,WAAY,kBAEdqN,aAAa,EACbI,WAAY,SAAC3O,GAAD,OACV,gBAAC4O,GAAA,EAAD,CACE/N,KAAK,sBACLC,KAAM,GACN6C,QAAS3D,EAAM2D,QACf5C,MAAOX,SAKf,gBAAC8N,GAAMM,OAAP,CACE3N,KAAK,aACL4N,UAAW3M,GACXvE,QAAS,CACPoF,MAAO,WACP+L,iBAAkB,CAChBxN,WAAY,kBAEdqN,aAAa,EACbI,WAAY,SAAC3O,GAAD,OACV,gBAAC4O,GAAA,EAAD,CACE/N,KAAK,sBACLC,KAAM,GACN6C,QAAS3D,EAAM2D,QACf5C,MAAOX,SAKf,gBAAC8N,GAAMM,OAAP,CACE3N,KAAK,WACL4N,UAAW1B,GACXxP,QAAS,CACPoF,MAAO,YACP+L,iBAAkB,CAChBxN,WAAY,kBAEdqN,aAAa,EACbI,WAAY,SAAC3O,GAAD,OACV,gBAAC4O,GAAA,EAAD,CACE/N,KAAK,sBACLC,KAAM,GACN6C,QAAS3D,EAAM2D,QACf5C,MAAOX,UChGrB,IAuCMkB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTE,KAAM,EACNxB,gBAAiBC,IAEnB0D,IAAK,CACHnC,KAAM,EACNlB,QAAS,IAEX4D,OAAQ,CACN1C,KAAM,GAERkN,MAAO,CACLlN,KAAM,GAERmN,UAAW,CACTnN,KAAM,EACNxB,gBAAiBC,GACjBC,WAAY,YAEd0O,OAAQ,CACNpN,KAAM,EACNrB,eAAgB,YAElB0O,eAAgB,CACdrN,KAAM,EACNrB,eAAgB,cAIL2O,GArEoB,WAAO,IAAD,EACPvM,mBAAiB,IADV,WAChCqC,EADgC,KACtBmK,EADsB,KAEjCxB,EAAe1D,qBAAWD,IAFO,EAIb/H,sBAAY7C,EAAgB,CACpD8C,YAAa,SAAC2L,GACZF,EAAaJ,MAAMM,EAAYN,MAAM5O,UANF,WAIhC4O,EAJgC,UAIvBpL,KAMhB,OACE,kBAACgB,EAAA,EAAD,CAAMhD,MAAOoB,GAAOG,WAClB,kBAACyB,EAAA,EAAD,CAAMhD,MAAOoB,GAAOwC,KAClB,kBAACZ,EAAA,EAAD,CAAMhD,MAAOoB,GAAOyN,QAClB,kBAACvK,GAAD,gBACA,kBAACG,GAAD,sCAEF,kBAACzB,EAAA,EAAD,CAAMhD,MAAOoB,GAAO0N,gBAClB,kBAAChO,GAAD,CACEqC,qBAAsBjD,GACtBgD,YAAa,WACbE,MAAOyB,EACPxB,aAAc,SAAC4L,GAAD,OAAOD,EAAYC,QAIvC,kBAACjM,EAAA,EAAD,CAAMhD,MAAOoB,GAAO+C,QAClB,kBAACnB,EAAA,EAAD,CAAMhD,MAAOoB,GAAOuN,QACpB,kBAAC3L,EAAA,EAAD,CAAMhD,MAAOoB,GAAOwN,WAClB,kBAAC/O,GAAD,CACE4D,QAAS,kBAAM2J,EAAM,CAAE1J,UAAW,CAAEmB,eACpC7E,MAAO,CAAEkF,WAAY,GAAIrB,YAAa,UC9BnC,SAASqL,KACtB,IAAMC,ECTO,WAA+B,IAAD,EACK1B,YAAe,GADpB,WACpC0B,EADoC,KACjBC,EADiB,KA6B3C,OAzBA3B,aAAgB,WACd,EAAAtP,EAAAC,OAAA,gEAEIiR,MAFJ,WAAAlR,EAAA,MAKUmR,IAAA,OACDC,IAASC,MADR,IAEJ,iBAAkBC,EAAQ,KAC1B,kBAAmBA,EAAQ,KAC3B,mBAAoBA,EAAQ,KAC5B,oBAAqBA,EAAQ,SAVnC,sDAcIpN,QAAQqN,KAAR,MAdJ,uBAgBIN,GAAmB,GACnBC,MAjBJ,mFAsBC,IAEIF,EDpBmBQ,GADE,EAGAnN,oBAAS,GAHT,WAGrBoN,EAHqB,KAGbC,EAHa,KAK5BtJ,qBAAU,WACRjI,IAAaC,QAAQ,SAASuR,MAAK,SAACtR,GAChCA,GAAQqR,GAAU,QAErB,IAUH,OAAKV,EAID,kBAAC,GAAa5C,SAAd,CAAuBnJ,MAAO,CAAEgK,MAZtB,SAAC5O,GACbF,IAAayR,QAAQ,QAASvR,GAAOsR,MAAK,kBAAMD,GAAU,OAWjBxC,OAR5B,WACb/O,IAAa0R,WAAW,SAASF,MAAK,kBAAMD,GAAU,SAQlD,kBAAC,iBAAD,CAAgBjR,OAAQA,GACtB,kBAAC,IAAD,KACGgR,EAAS,kBAACtC,GAAD,MAAiB,kBAAC,GAAD,MAC3B,kBAAC2C,EAAA,UAAD,SAPD,O,0DEjCXC,EAAOC,QAAU,IAA0B,8B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3C,IAAIvD,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASwD,EAAeC,GACvB,IAAI1I,EAAK2I,EAAsBD,GAC/B,OAAOE,EAAoB5I,GAE5B,SAAS2I,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE5D,EAAKyD,GAAM,CACpC,IAAI7E,EAAI,IAAIiF,MAAM,uBAAyBJ,EAAM,KAEjD,MADA7E,EAAEkF,KAAO,mBACHlF,EAEP,OAAOoB,EAAIyD,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAK/D,IAEpBwD,EAAeS,QAAUP,EACzBJ,EAAOC,QAAUC,EACjBA,EAAezI,GAAK,M","file":"static/js/app.0ef6b211.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const typeDefs = gql`\n  extend type Query {\n    User: User\n  }\n`;\n\nexport const resolvers = {};\n","import {\n  ApolloClient,\n  createHttpLink,\n  gql,\n  InMemoryCache,\n  split,\n} from \"@apollo/client\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Constants from \"expo-constants\";\nimport { Platform } from \"react-native\";\nimport { setContext } from \"apollo-link-context\";\nimport { typeDefs, resolvers } from \"./resolvers\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nconst getLocalHostName = () => {\n  // assumes you are running on LAN mode and running the server locally on port 5000\n  const expoUrl = Constants.manifest.bundleUrl;\n\n  const hostnameStartIndex = expoUrl.indexOf(\"//\") + 2;\n  const hostname = expoUrl.substring(\n    hostnameStartIndex,\n    expoUrl.indexOf(\":\", hostnameStartIndex)\n  );\n\n  return hostname;\n};\n\nlet uri;\nif (process.env.HEROKU) {\n  uri = \"://giocode-blog-app.herokuapp.com/graphql\";\n} else {\n  uri =\n    Platform.OS === \"web\"\n      ? \"://localhost:4000/graphql\"\n      : \"://localhost:4000/graphql\".replace(\"localhost\", getLocalHostName());\n}\n\nconst wsLink = new WebSocketLink({\n  uri: `ws${uri}`,\n  options: {\n    reconnect: true,\n  },\n});\n\nconst httpLink = createHttpLink({\n  uri: `http${uri}`,\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nconst authLink = setContext(async (_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = await AsyncStorage.getItem(\"TOKEN\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: authLink.concat(splitLink),\n  cache,\n  typeDefs,\n  resolvers,\n});\n\nexport default client;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_MUTATION = gql`\n  mutation Login($username: String!) {\n    login(username: $username) {\n      token\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport const CREATE_POST = gql`\n  mutation CreatePost($content: String!, $title: String!) {\n    createPost(content: $content, title: $title) {\n      id\n    }\n  }\n`;\n\nexport const EDIT_POST = gql`\n  mutation EditPost($content: String, $title: String, $id: ID!) {\n    editPost(content: $content, title: $title, id: $id) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_POST = gql`\n  mutation DeletePost($id: ID!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation CreateComment($content: String!, $postId: ID!) {\n    createComment(content: $content, postId: $postId) {\n      id\n    }\n  }\n`;\n\nexport const EDIT_COMMENT = gql`\n  mutation EditComment($content: String!, $id: ID!) {\n    editComment(content: $content, id: $id) {\n      id\n    }\n  }\n`;\n\nexport const LIKE = gql`\n  mutation Like($commentId: ID, $postId: ID) {\n    like(commentId: $commentId, postId: $postId) {\n      id\n    }\n  }\n`;\n\nexport const UNLIKE = gql`\n  mutation UnLike($commentId: ID, $postId: ID) {\n    unLike(commentId: $commentId, postId: $postId) {\n      id\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOCALUSER = gql`\n  query CurrentUser {\n    User @client {\n      id\n    }\n  }\n`;\n\nexport const CURRENTUSER = gql`\n  query CurrentUser {\n    currentUser {\n      id\n      username\n    }\n  }\n`;\n\nexport const POSTS_QUERY = gql`\n  query Posts($search: String) {\n    posts(search: $search) {\n      id\n      title\n      content\n      author {\n        username\n      }\n      likes {\n        id\n      }\n      comments {\n        id\n      }\n      createdAt\n    }\n  }\n`;\n\nexport const GET_POST = gql`\n  query getPost($id: ID!) {\n    getPost(id: $id) {\n      title\n      content\n      author {\n        id\n        username\n      }\n      likes {\n        author {\n          id\n        }\n        id\n      }\n      comments {\n        id\n        createdAt\n        author {\n          id\n          username\n        }\n        content\n        likes {\n          author {\n            id\n          }\n        }\n      }\n      createdAt\n    }\n    User @client {\n      id\n    }\n  }\n`;\n","export default {\n  BLUE: \"#3A4460\",\n  BLUE_66: \"#767D90\",\n  BLUE_33: \"#B7BAC5\",\n  PEACH: \"#FFE0AA\",\n  WHITE: \"#FFFFFF\",\n  SEMI_WHITE: \"#FBFBFB\",\n  GRAY_BG: \"#F5F5F5\",\n  GRAY_TXT: \"#B1B4BF\",\n};\n","import * as React from \"react\";\nimport { TouchableOpacity, TouchableOpacityProps } from \"react-native\";\nimport Colors from \"../constants/Colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nexport function ArrowButton(props: TouchableOpacityProps) {\n  return (\n    <TouchableOpacity\n      {...props}\n      style={[\n        {\n          backgroundColor: Colors.PEACH,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          paddingLeft: 10,\n          paddingRight: 10,\n          padding: 5,\n          borderRadius: 15,\n          width: 100,\n        },\n        props.style,\n      ]}\n    >\n      <AntDesign name=\"arrowright\" size={50} color=\"white\" />\n    </TouchableOpacity>\n  );\n}\n","import * as React from \"react\";\nimport { TextInput, TextInputProps } from \"react-native\";\nimport Colors from \"../constants/Colors\";\n\nexport function StyledTextInput(props: TextInputProps) {\n  return (\n    <TextInput\n      {...props}\n      style={[\n        {\n          backgroundColor: Colors.BLUE,\n          fontFamily: \"quicksand-light\",\n          fontSize: 16,\n          padding: 7.5,\n          color: \"white\",\n          paddingTop: 12.5,\n          paddingBottom: 12.5,\n          borderRadius: 5,\n        },\n        props.style,\n      ]}\n    />\n  );\n}\n","import { useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { CREATE_POST } from \"../apollo/mutations\";\nimport { POSTS_QUERY } from \"../apollo/query\";\nimport { ArrowButton } from \"../components/ArrowButton\";\nimport { StyledTextInput } from \"../components/StyledTextInput\";\nimport Colors from \"../constants/Colors\";\n\nconst CreatePost: React.FC<any> = ({ navigation }) => {\n  const [createPost, { data }] = useMutation(CREATE_POST, {\n    onCompleted: (data) => {\n      navigation.goBack();\n    },\n    refetchQueries: [{ query: POSTS_QUERY }],\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const onCreate = () => {\n    if (!title || !content) alert(\"all fields mandatory\");\n    else createPost({ variables: { content, title } });\n  };\n\n  return (\n    <ScrollView scrollEnabled={false} contentContainerStyle={styles.container}>\n      <View style={styles.body}>\n        <StyledTextInput\n          style={{\n            backgroundColor: Colors.GRAY_BG,\n            margin: 15,\n            color: Colors.BLUE,\n            fontFamily: \"quicksand-bold\",\n          }}\n          placeholder={\"Post Title\"}\n          placeholderTextColor={Colors.GRAY_TXT}\n          value={title}\n          onChangeText={(v) => setTitle(v)}\n        />\n        <StyledTextInput\n          multiline\n          style={{\n            backgroundColor: Colors.GRAY_BG,\n            margin: 15,\n            minHeight: 150,\n            color: Colors.BLUE,\n            fontFamily: \"quicksand-bold\",\n          }}\n          placeholder={\"Post Body\"}\n          placeholderTextColor={Colors.GRAY_TXT}\n          value={content}\n          onChangeText={(v) => setContent(v)}\n        />\n      </View>\n      <View style={styles.footer}>\n        <ArrowButton\n          onPress={() => onCreate()}\n          style={{ top: -30, marginRight: 20 }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n  },\n  body: {\n    flex: 1,\n    backgroundColor: Colors.SEMI_WHITE,\n  },\n  footer: {\n    flex: 0.1,\n    backgroundColor: Colors.WHITE,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n  },\n});\n\nexport default CreatePost;\n","import { gql } from \"@apollo/client\";\n\nexport const POSTS_SUBSCRIPTION = gql`\n  subscription {\n    postAdded {\n      id\n      title\n      content\n      author {\n        username\n      }\n      likes {\n        id\n        author {\n          id\n        }\n      }\n      comments {\n        id\n      }\n      createdAt\n    }\n  }\n`;\n\nexport const COMMENTS_SUBSCRIPTION = gql`\n  subscription CommentAdded($postId: ID!) {\n    commentAdded(postId: $postId) {\n      id\n      createdAt\n      author {\n        id\n        username\n      }\n      content\n      likes {\n        id\n        author {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const LIKES_SUBSCRIPTION = gql`\n  subscription likeAdded($postId: ID, $commentId: ID) {\n    likeAdded(postId: $postId, commentId: $commentId) {\n      id\n      author {\n        id\n      }\n      comment {\n        id\n      }\n      post {\n        id\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\n\ninterface AddButtonProps {\n  onPress: (event: GestureResponderEvent) => void | undefined;\n}\n\nconst AddButton: React.FC<AddButtonProps> = (props) => {\n  return (\n    <TouchableOpacity style={styles.container} onPress={props.onPress}>\n      <AntDesign name=\"pluscircle\" size={60} color={Colors.BLUE_66} />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    opacity: 0.5,\n    bottom: 30,\n    right: 20,\n  },\n});\n\nexport default AddButton;\n","import * as React from \"react\";\nimport Colors from \"../constants/Colors\";\n\nimport { Text } from \"react-native\";\n\ntype TextProps = Text[\"props\"];\n\nexport function Bold(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[\n        { fontFamily: \"quicksand-bold\", fontSize: 40, color: Colors.BLUE },\n        props.style,\n      ]}\n    />\n  );\n}\n\nexport function Medium(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[\n        { fontFamily: \"quicksand-medium\", fontSize: 16, color: Colors.BLUE },\n        props.style,\n      ]}\n    />\n  );\n}\n\nexport function Regular(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[\n        { fontFamily: \"quicksand-regular\", fontSize: 16, color: Colors.BLUE },\n        props.style,\n      ]}\n    />\n  );\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\nimport { Post } from \"../types\";\nimport { Bold, Medium, Regular } from \"./StyledText\";\n\ninterface PostCardProps {\n  post: Post;\n  onPress: any;\n}\n\nexport function PostCard(props: PostCardProps) {\n  const { post, onPress } = props;\n  return (\n    <TouchableOpacity style={styles.container} onPress={onPress}>\n      <Text>\n        <Medium style={styles.name}>{post.author.username} </Medium>\n        <Medium style={styles.when}>{moment(post.createdAt).fromNow()}</Medium>\n      </Text>\n      <Bold style={{ fontSize: 25, color: Colors.BLUE, marginTop: 10 }}>\n        {post.title}\n      </Bold>\n      <Regular style={{ fontSize: 20, paddingBottom: 10 }}>\n        {post.content.substring(0, 40)}\n      </Regular>\n      <View style={styles.footer}>\n        <Medium>{post.likes.length} Likes</Medium>\n        <Medium>{post.comments.length} Comments</Medium>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.WHITE,\n    marginTop: 15,\n    padding: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n\n    elevation: 3,\n  },\n  name: {\n    color: Colors.BLUE,\n  },\n  when: {\n    color: Colors.BLUE_66,\n  },\n  footer: {\n    flexDirection: \"row\",\n\n    justifyContent: \"space-between\",\n  },\n});\n","import { useQuery, useSubscription } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  RefreshControl,\n  StyleSheet,\n  View,\n  FlatList,\n} from \"react-native\";\nimport { POSTS_QUERY } from \"../apollo/query\";\nimport { POSTS_SUBSCRIPTION } from \"../apollo/subscriptions\";\nimport AddButton from \"../components/AddButton\";\nimport { PostCard } from \"../components/PostCard\";\nimport { Bold } from \"../components/StyledText\";\nimport { StyledTextInput } from \"../components/StyledTextInput\";\nimport Colors from \"../constants/Colors\";\n\nimport { Post } from \"../types\";\n\ninterface HomeScreenProps {\n  navigation: any;\n}\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {\n  const {\n    data: { posts = [] } = {},\n    loading,\n    refetch,\n    subscribeToMore,\n  } = useQuery(POSTS_QUERY);\n  const [search, setSearch] = useState(\"\");\n  const [filteredPosts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setPosts(\n      posts.filter((post: any) => {\n        return (\n          post.content.toLowerCase().includes(search.toLowerCase()) ||\n          post.title.toLowerCase().includes(search.toLowerCase())\n        );\n      })\n    );\n  }, [search, posts]);\n\n  useEffect(() => {\n    !loading &&\n      subscribeToMore({\n        document: POSTS_SUBSCRIPTION,\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const newFeedItem = subscriptionData.data.postAdded;\n          return Object.assign({}, prev, {\n            posts: [newFeedItem, ...prev.posts],\n          });\n        },\n      });\n  }, []);\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n  return (\n    <View style={styles.container}>\n      <Bold style={{ letterSpacing: 5 }}>Posts</Bold>\n      <StyledTextInput\n        value={search}\n        onChangeText={(t) => setSearch(t)}\n        style={{ marginTop: 10 }}\n        placeholderTextColor={Colors.WHITE}\n        placeholder={\"Cerca post\"}\n      />\n      <FlatList\n        data={filteredPosts}\n        refreshControl={\n          <RefreshControl refreshing={loading} onRefresh={() => refetch()} />\n        }\n        keyExtractor={(item: Post) => item.id}\n        renderItem={({ item }) => (\n          <PostCard\n            onPress={() => navigation.navigate(\"Post\", { id: item.id })}\n            post={item}\n          />\n        )}\n      />\n      <AddButton onPress={() => navigation.navigate(\"CreatePost\")} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.SEMI_WHITE,\n    padding: 10,\n    paddingTop: 40,\n  },\n});\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nimport { Bold } from \"./StyledText\";\nimport {\n  ActivityIndicator,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LIKE, UNLIKE } from \"../apollo/mutations\";\nimport { GET_POST, LOCALUSER, POSTS_QUERY } from \"../apollo/query\";\nimport { Like } from \"../types\";\n\ninterface LikeButtonProps {\n  likes: Like[];\n  postId?: string | null;\n  commentId?: string | null;\n  style?: TextStyle;\n}\n\nconst LikeButton: React.FC<LikeButtonProps> = ({\n  postId,\n  commentId,\n  likes,\n  style,\n}) => {\n  const { data, loading } = useQuery(LOCALUSER);\n\n  const [like] = useMutation(LIKE, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      { query: GET_POST, variables: { id: postId } },\n      { query: POSTS_QUERY },\n    ],\n  });\n  const [unLike] = useMutation(UNLIKE, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      { query: GET_POST, variables: { id: postId } },\n      { query: POSTS_QUERY },\n    ],\n  });\n\n  if (loading) return <ActivityIndicator />;\n\n  if (likes.find((l: Like) => l.author.id == data.User.id)) {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          unLike({\n            variables: { postId: commentId ? null : postId, commentId },\n          })\n        }\n        style={{\n          flexDirection: \"row\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Entypo name=\"heart\" size={24} color={Colors.PEACH} />\n        <Bold\n          style={[styles.small, { color: Colors.WHITE, marginLeft: 3 }, style]}\n        >\n          {likes.length} Likes\n        </Bold>\n      </TouchableOpacity>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          like({ variables: { postId: commentId ? null : postId, commentId } })\n        }\n        style={{\n          flexDirection: \"row\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Entypo name=\"heart-outlined\" size={24} color={Colors.PEACH} />\n        <Bold\n          style={[styles.small, { color: Colors.WHITE, marginLeft: 3 }, style]}\n        >\n          {likes.length} Likes\n        </Bold>\n      </TouchableOpacity>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  small: { fontSize: 12 },\n});\n\nexport default LikeButton;\n","import { createContext } from \"react\";\n\nexport default createContext({\n  edit: false,\n  setEdit: (v: string | null) => {},\n});\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  ActivityIndicator,\n  TextInput,\n} from \"react-native\";\nimport Colors from \"../constants/Colors\";\nimport { Comment } from \"../types\";\nimport { Bold, Regular } from \"./StyledText\";\nimport moment from \"moment\";\nimport LikeButton from \"./LikeButton\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_POST, LOCALUSER } from \"../apollo/query\";\nimport { EDIT_COMMENT } from \"../apollo/mutations\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport EditContext from \"../editContext\";\n\ninterface CommentCardProps {\n  comment: Comment;\n  id: string;\n  flatlist: any;\n  index: number;\n  subscribeToMore: () => void;\n}\n\nconst CommentCard: React.FC<CommentCardProps> = (props) => {\n  const { comment, flatlist, id, index, subscribeToMore } = props;\n\n  useEffect(() => {\n    subscribeToMore();\n  }, []);\n\n  const { data: { User = {} } = {} } = useQuery(LOCALUSER);\n  const context = useContext(EditContext);\n  const [editComment, { data, loading }] = useMutation(EDIT_COMMENT, {\n    refetchQueries: [{ query: GET_POST, variables: { id } }],\n  });\n\n  const isEdit = context.edit + \"\" == comment.id + \"\";\n  const [editValue, setEditValue] = useState(\"\");\n\n  const editTextInputRef = useRef(null);\n\n  useEffect(() => {\n    console.log(\"child\", flatlist.current);\n  }, [flatlist]);\n\n  useEffect(() => {\n    if (isEdit) {\n      editTextInputRef.current.focus();\n      console.log(flatlist.current.scrollToIndex({ index }));\n    }\n  }, [context.edit]);\n\n  const startEdit = () => {\n    setEditValue(comment.content);\n    context.setEdit(comment.id);\n  };\n\n  const onCommentEdit = () => {\n    editComment({\n      variables: { id: comment.id, content: editValue },\n    });\n    context.setEdit(null);\n  };\n\n  if (loading) return <ActivityIndicator />;\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        <Text>\n          <Bold style={styles.small}>{comment.author.username} </Bold>\n          <Bold style={styles.smallGrey}>\n            {moment(comment.createdAt).fromNow()}\n          </Bold>\n        </Text>\n        {comment.author.id === User.id && !isEdit && (\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n            }}\n            onPress={() => startEdit()}\n          >\n            <AntDesign name=\"edit\" size={18} color={Colors.BLUE} />\n            <Bold style={styles.editText}>Edit</Bold>\n          </TouchableOpacity>\n        )}\n      </View>\n      {!isEdit ? (\n        <>\n          <Regular>{comment.content}</Regular>\n          <View style={{ height: 10 }} />\n          <LikeButton\n            postId={id}\n            commentId={comment.id}\n            likes={comment.likes}\n            style={{ color: Colors.BLUE }}\n          />\n        </>\n      ) : (\n        <>\n          <TextInput\n            style={styles.textInput}\n            value={editValue}\n            onChangeText={(t) => setEditValue(t)}\n            ref={editTextInputRef}\n          />\n          <View style={{ flexDirection: \"row\", marginTop: 15 }}>\n            <TouchableOpacity\n              onPress={onCommentEdit}\n              style={styles.confirmButton}\n            >\n              <Bold style={styles.confirmText}>CONFERMA</Bold>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                context.setEdit(null);\n              }}\n              style={styles.cancelButton}\n            >\n              <Bold\n                style={{\n                  color: Colors.WHITE,\n                  fontSize: 12,\n                  textAlign: \"center\",\n                }}\n              >\n                ANNULLA\n              </Bold>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.WHITE,\n    marginTop: 5,\n    marginBottom: 5,\n    padding: 15,\n    minHeight: 10,\n    zIndex: 100,\n  },\n  small: {\n    fontSize: 14,\n  },\n  smallGrey: {\n    fontSize: 14,\n    color: Colors.BLUE_66,\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  textInput: {\n    borderColor: Colors.BLUE,\n    borderWidth: 1,\n    padding: 5,\n    paddingBottom: 10,\n    paddingTop: 10,\n    borderRadius: 5,\n  },\n  editText: {\n    marginLeft: 5,\n    color: Colors.BLUE,\n    fontSize: 14,\n  },\n  confirmButton: {\n    backgroundColor: Colors.PEACH,\n    padding: 5,\n    width: 100,\n    borderRadius: 5,\n    justifyContent: \"center\",\n  },\n  cancelButton: {\n    backgroundColor: Colors.GRAY_TXT,\n    padding: 5,\n    width: 100,\n    borderRadius: 5,\n    justifyContent: \"center\",\n    marginLeft: 15,\n  },\n  confirmText: {\n    fontSize: 12,\n    color: Colors.BLUE,\n    textAlign: \"center\",\n  },\n});\n\nexport default CommentCard;\n","import { Dimensions } from \"react-native\";\n\nexport const DeviceWidth = Dimensions.get(\"window\").width;\nconst height = Dimensions.get(\"window\").height;\n\nexport default {\n  window: {\n    DeviceWidth,\n    height,\n  },\n  isSmallDevice: DeviceWidth < 375,\n};\n","import React, { KeyboardEvent, useEffect, useState } from \"react\";\nimport {\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport Colors from \"../constants/Colors\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { DeviceWidth } from \"../constants/Layout\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_COMMENT } from \"../apollo/mutations\";\nimport { GET_POST, POSTS_QUERY } from \"../apollo/query\";\n\nconst CommentTextInput = ({ id }: { id: string }) => {\n  const [comment, setComment] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [createComment, { data }] = useMutation(CREATE_COMMENT, {\n    refetchQueries: [\n      { query: GET_POST, variables: { id } },\n      { query: POSTS_QUERY },\n    ],\n    onCompleted: () => {\n      setComment(\"\");\n      Keyboard.dismiss();\n      setOffset(0);\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  useEffect(() => {\n    if (Platform.OS === \"ios\") {\n      Keyboard.addListener(\"keyboardDidShow\", _keyboardDidShow);\n      Keyboard.addListener(\"keyboardDidHide\", _keyboardDidHide);\n\n      return () => {\n        Keyboard.removeListener(\"keyboardDidShow\", _keyboardDidShow);\n        Keyboard.removeListener(\"keyboardDidHide\", _keyboardDidHide);\n      };\n    }\n  }, []);\n\n  const _keyboardDidShow = (e: any) => {\n    setOffset(e.endCoordinates.height);\n  };\n\n  const _keyboardDidHide = () => {\n    setOffset(0);\n  };\n\n  return (\n    <View style={[styles.container, { bottom: offset }]}>\n      <View\n        style={{\n          backgroundColor: Colors.GRAY_BG,\n          flex: 1,\n          margin: 15,\n          marginBottom: 10,\n          borderRadius: 5,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TextInput\n          style={{\n            flex: 6,\n            color: Colors.BLUE,\n            fontFamily: \"quicksand-light\",\n            fontSize: 16,\n            padding: 10,\n            paddingTop: 12.5,\n            paddingBottom: 12.5,\n          }}\n          placeholder={\"Leave a comment\"}\n          placeholderTextColor={Colors.BLUE}\n          value={comment}\n          onChangeText={(v) => setComment(v)}\n        />\n        <TouchableOpacity\n          style={{\n            flex: 2,\n            padding: 15,\n            alignContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() =>\n            comment.length &&\n            createComment({ variables: { content: comment, postId: id } })\n          }\n        >\n          <Feather name=\"send\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: DeviceWidth,\n    backgroundColor: Colors.BLUE_33,\n    position: \"absolute\",\n    bottom: 0,\n    paddingBottom: 10,\n    zIndex: 100,\n  },\n});\n\nexport default CommentTextInput;\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  RefreshControl,\n  ActivityIndicator,\n  TouchableOpacity,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport { GET_POST } from \"../apollo/query\";\nimport { Bold, Regular } from \"../components/StyledText\";\nimport Colors from \"../constants/Colors\";\n\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { Comment } from \"../types\";\nimport CommentCard from \"../components/CommentCard\";\nimport CommentTextInput from \"../components/CommentTextInput\";\n\nimport { Feather } from \"@expo/vector-icons\";\nimport LikeButton from \"../components/LikeButton\";\n\nimport EditContext from \"../editContext\";\nimport {\n  COMMENTS_SUBSCRIPTION,\n  LIKES_SUBSCRIPTION,\n} from \"../apollo/subscriptions\";\n\nconst PostScreen: React.FC<any> = (props) => {\n  const { id } = props.route.params;\n\n  const [edit, setEdit] = useState(false);\n  const {\n    data: { getPost = {}, User = {} } = {},\n    refetch,\n    loading,\n    subscribeToMore,\n  } = useQuery(GET_POST, {\n    variables: { id },\n  });\n  let flatlistRef = useRef(null);\n\n  useEffect(() => {\n    const unsubscribe = props.navigation.addListener(\"focus\", () => {\n      refetch(id);\n    });\n\n    return unsubscribe;\n  }, [props.navigation]);\n\n  useEffect(() => {\n    if (loading) return;\n    if (getPost.author.id == User.id)\n      props.navigation.setOptions({\n        headerRight: () => (\n          <TouchableOpacity\n            onPress={() =>\n              props.navigation.navigate(\"EditPost\", {\n                id,\n                content: getPost.content,\n                title: getPost.title,\n              })\n            }\n          >\n            <Feather\n              style={{ padding: 5 }}\n              name=\"edit\"\n              size={24}\n              color={Colors.BLUE}\n            />\n          </TouchableOpacity>\n        ),\n      });\n  }, [getPost]);\n\n  useEffect(() => {\n    !loading &&\n      subscribeToMore({\n        document: COMMENTS_SUBSCRIPTION,\n        variables: { postId: id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const newFeedItem = subscriptionData.data.commentAdded;\n          const newObj = Object.assign({}, prev, {\n            getPost: {\n              ...prev.getPost,\n              comments: [newFeedItem, ...prev.getPost.comments],\n            },\n          });\n          return newObj;\n        },\n      });\n\n    !loading &&\n      subscribeToMore({\n        document: LIKES_SUBSCRIPTION,\n        variables: { postId: id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const newFeedItem = subscriptionData.data.likeAdded;\n          const newObj = Object.assign({}, prev, {\n            getPost: {\n              ...prev.getPost,\n              likes: [newFeedItem, ...prev.getPost.likes],\n            },\n          });\n          return newObj;\n        },\n      });\n  }, []);\n\n  const listHeader = () => {\n    return (\n      <>\n        <View style={styles.mainContainer}>\n          <Bold style={{ fontSize: 50 }}>{getPost.title}</Bold>\n          <Bold style={styles.small}>by {getPost.author.username}</Bold>\n          <Regular style={styles.body}>{getPost.content}</Regular>\n        </View>\n        <View style={styles.indicatorBar}>\n          <View style={styles.indicator}>\n            <LikeButton likes={getPost.likes} postId={id} />\n          </View>\n          <View style={styles.indicator}>\n            <EvilIcons name=\"comment\" size={24} color={Colors.PEACH} />\n            <Bold style={[styles.small, { color: Colors.WHITE }]}>\n              {getPost.comments.length} Comments\n            </Bold>\n          </View>\n        </View>\n      </>\n    );\n  };\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n  return (\n    <EditContext.Provider value={{ edit, setEdit: (v) => setEdit(v) }}>\n      <View style={styles.container}>\n        {!edit && <CommentTextInput id={id} />}\n        <View style={{ flex: 1, paddingBottom: 80 }}>\n          <FlatList\n            ref={flatlistRef}\n            showsVerticalScrollIndicator={false}\n            ListHeaderComponent={listHeader()}\n            contentContainerStyle={{\n              backgroundColor: Colors.GRAY_BG,\n              paddingBottom: edit ? 300 : 100,\n            }}\n            data={getPost.comments}\n            keyExtractor={(item: Comment) => item.id}\n            refreshControl={\n              <RefreshControl\n                refreshing={loading}\n                onRefresh={() => refetch()}\n              />\n            }\n            renderItem={({ item, index }: { item: Comment; index: number }) => (\n              <CommentCard\n                subscribeToMore={() => {\n                  subscribeToMore({\n                    document: LIKES_SUBSCRIPTION,\n                    variables: { commentId: item.id },\n                    updateQuery: (prev, { subscriptionData }) => {\n                      if (!subscriptionData.data) return prev;\n                      const newFeedItem = subscriptionData.data.likeAdded;\n                      const newComments = prev.getPost.comments.map(\n                        (comment: any) => {\n                          if (comment.id == newFeedItem.comment.id) {\n                            return {\n                              ...comment,\n                              likes: [newFeedItem, ...comment.likes],\n                            };\n                          }\n                          return comment;\n                        }\n                      );\n                      const newObj = Object.assign({}, prev, {\n                        getPost: {\n                          ...prev.getPost,\n                          comments: {\n                            ...newComments,\n                          },\n                        },\n                      });\n                      return newObj;\n                    },\n                  });\n                }}\n                index={index}\n                comment={item}\n                id={id}\n                flatlist={flatlistRef}\n              />\n            )}\n          />\n        </View>\n      </View>\n    </EditContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, backgroundColor: Colors.GRAY_BG },\n  mainContainer: { padding: 10, backgroundColor: Colors.WHITE },\n  small: { fontSize: 12 },\n  body: { fontSize: 14, marginTop: 30, marginBottom: 20 },\n  indicatorBar: {\n    backgroundColor: Colors.BLUE,\n    height: 60,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  indicator: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    flexDirection: \"row\",\n  },\n});\nexport default PostScreen;\n","import { useMutation } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Alert,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { DELETE_POST, EDIT_POST } from \"../apollo/mutations\";\nimport { GET_POST, POSTS_QUERY } from \"../apollo/query\";\nimport { ArrowButton } from \"../components/ArrowButton\";\nimport { StyledTextInput } from \"../components/StyledTextInput\";\nimport Colors from \"../constants/Colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nconst EditPost: React.FC<any> = ({ navigation, route }) => {\n  const { id } = route.params;\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity style={{ padding: 5 }} onPress={() => onDelete()}>\n          <AntDesign name=\"delete\" size={24} color={Colors.BLUE} />\n        </TouchableOpacity>\n      ),\n    });\n  }, []);\n\n  const [editPost] = useMutation(EDIT_POST, {\n    onCompleted: (data) => {\n      navigation.goBack();\n    },\n    refetchQueries: [\n      { query: POSTS_QUERY },\n      { query: GET_POST, variables: { id } },\n    ],\n    onError: (error) => {\n      console.log(error.extraInfo);\n    },\n  });\n\n  const [deletePost] = useMutation(DELETE_POST, {\n    onCompleted: (data) => {\n      navigation.navigate(\"Home\");\n    },\n    refetchQueries: [{ query: POSTS_QUERY }],\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  const [title, setTitle] = useState(route.params.title);\n  const [content, setContent] = useState(route.params.content);\n\n  const onDelete = () => {\n    Alert.alert(\"WARNING\", \"Are you sure you want to delete the post?\", [\n      {\n        text: \"OK\",\n        onPress: () => deletePost({ variables: { id } }),\n      },\n      {\n        text: \"No\",\n      },\n    ]);\n  };\n\n  const onEdit = () => {\n    if (!title || !content) alert(\"all fields mandatory\");\n    else if (title === route.params.title && content === route.params.content)\n      navigation.goBack();\n    else editPost({ variables: { content, title, id } });\n  };\n\n  return (\n    <ScrollView scrollEnabled={false} contentContainerStyle={styles.container}>\n      <View style={styles.body}>\n        <StyledTextInput\n          style={{\n            backgroundColor: Colors.GRAY_BG,\n            margin: 15,\n            color: Colors.BLUE,\n            fontFamily: \"quicksand-bold\",\n          }}\n          placeholder={\"Post Title\"}\n          placeholderTextColor={Colors.GRAY_TXT}\n          value={title}\n          onChangeText={(v) => setTitle(v)}\n        />\n        <StyledTextInput\n          multiline\n          style={{\n            backgroundColor: Colors.GRAY_BG,\n            margin: 15,\n            minHeight: 150,\n            color: Colors.BLUE,\n            fontFamily: \"quicksand-bold\",\n          }}\n          placeholder={\"Post Body\"}\n          placeholderTextColor={Colors.GRAY_TXT}\n          value={content}\n          onChangeText={(v) => setContent(v)}\n        />\n      </View>\n      <View style={styles.footer}>\n        <ArrowButton\n          onPress={() => onEdit()}\n          style={{ top: -30, marginRight: 20 }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n  },\n  body: {\n    flex: 1,\n    backgroundColor: Colors.SEMI_WHITE,\n  },\n  footer: {\n    flex: 0.1,\n    backgroundColor: Colors.WHITE,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n  },\n});\n\nexport default EditPost;\n","import { createContext } from \"react\";\n\nexport default createContext({\n  login: (token: string) => {},\n  logout: () => {},\n});\n","import { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport * as React from \"react\";\nimport CreatePost from \"../screens/CreatePost\";\n\nimport HomeScreen from \"../screens/HomeScreen\";\nimport PostScreen from \"../screens/PostScreen\";\n\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nimport { RootStackParamList } from \"../types\";\nimport Colors from \"../constants/Colors\";\nimport EditPost from \"../screens/EditPost\";\nimport { useApolloClient, useQuery } from \"@apollo/client\";\nimport { CURRENTUSER, LOCALUSER } from \"../apollo/query\";\nimport context from \"../context\";\n\nexport default function Navigation() {\n  const client = useApolloClient();\n  const loginContext = React.useContext(context);\n\n  useQuery(CURRENTUSER, {\n    onCompleted: ({ currentUser }) => {\n      client.writeQuery({\n        query: LOCALUSER,\n        data: {\n          User: currentUser,\n        },\n      });\n    },\n    onError: () => {\n      loginContext.logout();\n    },\n  });\n\n  return (\n    <NavigationContainer theme={DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator\n      initialRouteName={\"Home\"}\n      screenOptions={{ headerShown: false }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Post\"\n        component={PostScreen}\n        options={{\n          title: \"\",\n          headerTitleStyle: {\n            fontFamily: \"quicksand-bold\",\n          },\n          headerShown: true,\n          headerLeft: (props) => (\n            <MaterialIcons\n              name=\"keyboard-arrow-left\"\n              size={30}\n              onPress={props.onPress}\n              color={Colors.BLUE}\n            />\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{\n          title: \"New Post\",\n          headerTitleStyle: {\n            fontFamily: \"quicksand-bold\",\n          },\n          headerShown: true,\n          headerLeft: (props) => (\n            <MaterialIcons\n              name=\"keyboard-arrow-left\"\n              size={30}\n              onPress={props.onPress}\n              color={Colors.BLUE}\n            />\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"EditPost\"\n        component={EditPost}\n        options={{\n          title: \"Edit Post\",\n          headerTitleStyle: {\n            fontFamily: \"quicksand-bold\",\n          },\n          headerShown: true,\n          headerLeft: (props) => (\n            <MaterialIcons\n              name=\"keyboard-arrow-left\"\n              size={30}\n              onPress={props.onPress}\n              color={Colors.BLUE}\n            />\n          ),\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { useMutation } from \"@apollo/client\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nimport { LOGIN_MUTATION } from \"../apollo/mutations\";\nimport { ArrowButton } from \"../components/ArrowButton\";\nimport { Bold, Regular } from \"../components/StyledText\";\nimport { StyledTextInput } from \"../components/StyledTextInput\";\n\nimport Colors from \"../constants/Colors\";\nimport context from \"../context\";\n\nconst LoginScreen: React.FC<any> = () => {\n  const [username, setUsername] = useState<string>(\"\");\n  const loginContext = useContext(context);\n\n  const [login, { data }] = useMutation(LOGIN_MUTATION, {\n    onCompleted: (currentUser) => {\n      loginContext.login(currentUser.login.token);\n    },\n  });\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.top}>\n        <View style={styles.header}>\n          <Bold>WELCOME</Bold>\n          <Regular>Insert you username to start</Regular>\n        </View>\n        <View style={styles.inputContainer}>\n          <StyledTextInput\n            placeholderTextColor={Colors.WHITE}\n            placeholder={\"Username\"}\n            value={username}\n            onChangeText={(u) => setUsername(u)}\n          />\n        </View>\n      </View>\n      <View style={styles.bottom}>\n        <View style={styles.white} />\n        <View style={styles.semiwhite}>\n          <ArrowButton\n            onPress={() => login({ variables: { username } })}\n            style={{ marginTop: -30, marginRight: 20 }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.WHITE,\n  },\n  top: {\n    flex: 1,\n    padding: 20,\n  },\n  bottom: {\n    flex: 1,\n  },\n  white: {\n    flex: 3,\n  },\n  semiwhite: {\n    flex: 1,\n    backgroundColor: Colors.SEMI_WHITE,\n    alignItems: \"flex-end\",\n  },\n  header: {\n    flex: 2,\n    justifyContent: \"flex-end\",\n  },\n  inputContainer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n});\n\nexport default LoginScreen;\n","import { ApolloProvider, gql, useQuery } from \"@apollo/client\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport client from \"./apollo/client\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport Navigation from \"./navigation\";\nimport LoginScreen from \"./screens/LoginScreen\";\n\nimport LoginContext from \"./context\";\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  const [logged, setLogged] = useState(false);\n\n  useEffect(() => {\n    AsyncStorage.getItem(\"TOKEN\").then((token) => {\n      !!token ? setLogged(true) : null;\n    });\n  }, []);\n\n  const login = (token: string) => {\n    AsyncStorage.setItem(\"TOKEN\", token).then(() => setLogged(true));\n  };\n\n  const logout = () => {\n    AsyncStorage.removeItem(\"TOKEN\").then(() => setLogged(false));\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <LoginContext.Provider value={{ login, logout }}>\n        <ApolloProvider client={client}>\n          <SafeAreaProvider>\n            {logged ? <Navigation /> : <LoginScreen />}\n            <StatusBar />\n          </SafeAreaProvider>\n        </ApolloProvider>\n      </LoginContext.Provider>\n    );\n  }\n}\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport * as React from \"react\";\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          \"quicksand-bold\": require(\"../assets/fonts/Quicksand-Bold.ttf\"),\n          \"quicksand-light\": require(\"../assets/fonts/Quicksand-Light.ttf\"),\n          \"quicksand-medium\": require(\"../assets/fonts/Quicksand-Medium.ttf\"),\n          \"quicksand-regular\": require(\"../assets/fonts/Quicksand-Regular.ttf\"),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Quicksand-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Quicksand-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Quicksand-Medium.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Quicksand-Regular.ttf\";","var map = {\n\t\"./af\": 234,\n\t\"./af.js\": 234,\n\t\"./ar\": 235,\n\t\"./ar-dz\": 236,\n\t\"./ar-dz.js\": 236,\n\t\"./ar-kw\": 237,\n\t\"./ar-kw.js\": 237,\n\t\"./ar-ly\": 238,\n\t\"./ar-ly.js\": 238,\n\t\"./ar-ma\": 239,\n\t\"./ar-ma.js\": 239,\n\t\"./ar-sa\": 240,\n\t\"./ar-sa.js\": 240,\n\t\"./ar-tn\": 241,\n\t\"./ar-tn.js\": 241,\n\t\"./ar.js\": 235,\n\t\"./az\": 242,\n\t\"./az.js\": 242,\n\t\"./be\": 243,\n\t\"./be.js\": 243,\n\t\"./bg\": 244,\n\t\"./bg.js\": 244,\n\t\"./bm\": 245,\n\t\"./bm.js\": 245,\n\t\"./bn\": 246,\n\t\"./bn-bd\": 247,\n\t\"./bn-bd.js\": 247,\n\t\"./bn.js\": 246,\n\t\"./bo\": 248,\n\t\"./bo.js\": 248,\n\t\"./br\": 249,\n\t\"./br.js\": 249,\n\t\"./bs\": 250,\n\t\"./bs.js\": 250,\n\t\"./ca\": 251,\n\t\"./ca.js\": 251,\n\t\"./cs\": 252,\n\t\"./cs.js\": 252,\n\t\"./cv\": 253,\n\t\"./cv.js\": 253,\n\t\"./cy\": 254,\n\t\"./cy.js\": 254,\n\t\"./da\": 255,\n\t\"./da.js\": 255,\n\t\"./de\": 256,\n\t\"./de-at\": 257,\n\t\"./de-at.js\": 257,\n\t\"./de-ch\": 258,\n\t\"./de-ch.js\": 258,\n\t\"./de.js\": 256,\n\t\"./dv\": 259,\n\t\"./dv.js\": 259,\n\t\"./el\": 260,\n\t\"./el.js\": 260,\n\t\"./en-au\": 261,\n\t\"./en-au.js\": 261,\n\t\"./en-ca\": 262,\n\t\"./en-ca.js\": 262,\n\t\"./en-gb\": 263,\n\t\"./en-gb.js\": 263,\n\t\"./en-ie\": 264,\n\t\"./en-ie.js\": 264,\n\t\"./en-il\": 265,\n\t\"./en-il.js\": 265,\n\t\"./en-in\": 266,\n\t\"./en-in.js\": 266,\n\t\"./en-nz\": 267,\n\t\"./en-nz.js\": 267,\n\t\"./en-sg\": 268,\n\t\"./en-sg.js\": 268,\n\t\"./eo\": 269,\n\t\"./eo.js\": 269,\n\t\"./es\": 270,\n\t\"./es-do\": 271,\n\t\"./es-do.js\": 271,\n\t\"./es-mx\": 272,\n\t\"./es-mx.js\": 272,\n\t\"./es-us\": 273,\n\t\"./es-us.js\": 273,\n\t\"./es.js\": 270,\n\t\"./et\": 274,\n\t\"./et.js\": 274,\n\t\"./eu\": 275,\n\t\"./eu.js\": 275,\n\t\"./fa\": 276,\n\t\"./fa.js\": 276,\n\t\"./fi\": 277,\n\t\"./fi.js\": 277,\n\t\"./fil\": 278,\n\t\"./fil.js\": 278,\n\t\"./fo\": 279,\n\t\"./fo.js\": 279,\n\t\"./fr\": 280,\n\t\"./fr-ca\": 281,\n\t\"./fr-ca.js\": 281,\n\t\"./fr-ch\": 282,\n\t\"./fr-ch.js\": 282,\n\t\"./fr.js\": 280,\n\t\"./fy\": 283,\n\t\"./fy.js\": 283,\n\t\"./ga\": 284,\n\t\"./ga.js\": 284,\n\t\"./gd\": 285,\n\t\"./gd.js\": 285,\n\t\"./gl\": 286,\n\t\"./gl.js\": 286,\n\t\"./gom-deva\": 287,\n\t\"./gom-deva.js\": 287,\n\t\"./gom-latn\": 288,\n\t\"./gom-latn.js\": 288,\n\t\"./gu\": 289,\n\t\"./gu.js\": 289,\n\t\"./he\": 290,\n\t\"./he.js\": 290,\n\t\"./hi\": 291,\n\t\"./hi.js\": 291,\n\t\"./hr\": 292,\n\t\"./hr.js\": 292,\n\t\"./hu\": 293,\n\t\"./hu.js\": 293,\n\t\"./hy-am\": 294,\n\t\"./hy-am.js\": 294,\n\t\"./id\": 295,\n\t\"./id.js\": 295,\n\t\"./is\": 296,\n\t\"./is.js\": 296,\n\t\"./it\": 297,\n\t\"./it-ch\": 298,\n\t\"./it-ch.js\": 298,\n\t\"./it.js\": 297,\n\t\"./ja\": 299,\n\t\"./ja.js\": 299,\n\t\"./jv\": 300,\n\t\"./jv.js\": 300,\n\t\"./ka\": 301,\n\t\"./ka.js\": 301,\n\t\"./kk\": 302,\n\t\"./kk.js\": 302,\n\t\"./km\": 303,\n\t\"./km.js\": 303,\n\t\"./kn\": 304,\n\t\"./kn.js\": 304,\n\t\"./ko\": 305,\n\t\"./ko.js\": 305,\n\t\"./ku\": 306,\n\t\"./ku.js\": 306,\n\t\"./ky\": 307,\n\t\"./ky.js\": 307,\n\t\"./lb\": 308,\n\t\"./lb.js\": 308,\n\t\"./lo\": 309,\n\t\"./lo.js\": 309,\n\t\"./lt\": 310,\n\t\"./lt.js\": 310,\n\t\"./lv\": 311,\n\t\"./lv.js\": 311,\n\t\"./me\": 312,\n\t\"./me.js\": 312,\n\t\"./mi\": 313,\n\t\"./mi.js\": 313,\n\t\"./mk\": 314,\n\t\"./mk.js\": 314,\n\t\"./ml\": 315,\n\t\"./ml.js\": 315,\n\t\"./mn\": 316,\n\t\"./mn.js\": 316,\n\t\"./mr\": 317,\n\t\"./mr.js\": 317,\n\t\"./ms\": 318,\n\t\"./ms-my\": 319,\n\t\"./ms-my.js\": 319,\n\t\"./ms.js\": 318,\n\t\"./mt\": 320,\n\t\"./mt.js\": 320,\n\t\"./my\": 321,\n\t\"./my.js\": 321,\n\t\"./nb\": 322,\n\t\"./nb.js\": 322,\n\t\"./ne\": 323,\n\t\"./ne.js\": 323,\n\t\"./nl\": 324,\n\t\"./nl-be\": 325,\n\t\"./nl-be.js\": 325,\n\t\"./nl.js\": 324,\n\t\"./nn\": 326,\n\t\"./nn.js\": 326,\n\t\"./oc-lnc\": 327,\n\t\"./oc-lnc.js\": 327,\n\t\"./pa-in\": 328,\n\t\"./pa-in.js\": 328,\n\t\"./pl\": 329,\n\t\"./pl.js\": 329,\n\t\"./pt\": 330,\n\t\"./pt-br\": 331,\n\t\"./pt-br.js\": 331,\n\t\"./pt.js\": 330,\n\t\"./ro\": 332,\n\t\"./ro.js\": 332,\n\t\"./ru\": 333,\n\t\"./ru.js\": 333,\n\t\"./sd\": 334,\n\t\"./sd.js\": 334,\n\t\"./se\": 335,\n\t\"./se.js\": 335,\n\t\"./si\": 336,\n\t\"./si.js\": 336,\n\t\"./sk\": 337,\n\t\"./sk.js\": 337,\n\t\"./sl\": 338,\n\t\"./sl.js\": 338,\n\t\"./sq\": 339,\n\t\"./sq.js\": 339,\n\t\"./sr\": 340,\n\t\"./sr-cyrl\": 341,\n\t\"./sr-cyrl.js\": 341,\n\t\"./sr.js\": 340,\n\t\"./ss\": 342,\n\t\"./ss.js\": 342,\n\t\"./sv\": 343,\n\t\"./sv.js\": 343,\n\t\"./sw\": 344,\n\t\"./sw.js\": 344,\n\t\"./ta\": 345,\n\t\"./ta.js\": 345,\n\t\"./te\": 346,\n\t\"./te.js\": 346,\n\t\"./tet\": 347,\n\t\"./tet.js\": 347,\n\t\"./tg\": 348,\n\t\"./tg.js\": 348,\n\t\"./th\": 349,\n\t\"./th.js\": 349,\n\t\"./tk\": 350,\n\t\"./tk.js\": 350,\n\t\"./tl-ph\": 351,\n\t\"./tl-ph.js\": 351,\n\t\"./tlh\": 352,\n\t\"./tlh.js\": 352,\n\t\"./tr\": 353,\n\t\"./tr.js\": 353,\n\t\"./tzl\": 354,\n\t\"./tzl.js\": 354,\n\t\"./tzm\": 355,\n\t\"./tzm-latn\": 356,\n\t\"./tzm-latn.js\": 356,\n\t\"./tzm.js\": 355,\n\t\"./ug-cn\": 357,\n\t\"./ug-cn.js\": 357,\n\t\"./uk\": 358,\n\t\"./uk.js\": 358,\n\t\"./ur\": 359,\n\t\"./ur.js\": 359,\n\t\"./uz\": 360,\n\t\"./uz-latn\": 361,\n\t\"./uz-latn.js\": 361,\n\t\"./uz.js\": 360,\n\t\"./vi\": 362,\n\t\"./vi.js\": 362,\n\t\"./x-pseudo\": 363,\n\t\"./x-pseudo.js\": 363,\n\t\"./yo\": 364,\n\t\"./yo.js\": 364,\n\t\"./zh-cn\": 365,\n\t\"./zh-cn.js\": 365,\n\t\"./zh-hk\": 366,\n\t\"./zh-hk.js\": 366,\n\t\"./zh-mo\": 367,\n\t\"./zh-mo.js\": 367,\n\t\"./zh-tw\": 368,\n\t\"./zh-tw.js\": 368\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 589;"],"sourceRoot":""}